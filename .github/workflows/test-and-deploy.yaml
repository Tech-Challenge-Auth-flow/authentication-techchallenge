name: Test Lambda Function and Deploy SAM Application

on:
  workflow_dispatch:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install dependencies
        run: |
          cd auth-lambda
          npm install

      - name: Run tests
        run: |
          cd auth-lambda
          npm test

  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v5
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Identify AWS Identity
        run: aws sts get-caller-identity

      - name: Setup AWS SAM
        uses: aws-actions/setup-sam@v2
        with:
          use-installer: true
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build SAM application
        run: sam build --use-container

      - name: Deploy SAM application
        run: |
          sam deploy \
            --no-confirm-changeset \
            --no-fail-on-empty-changeset \
            --stack-name sam-techchallenge-${{ github.ref_name }} \
            --capabilities CAPABILITY_IAM \
            --parameter-overrides \
              UserPoolId=${{ secrets.COGNITO_USER_POOL_ID }} \
              ClientId=${{ secrets.COGNITO_CLIENT_ID }} \
              UserPassword=${{ secrets.USER_PASSWORD }} \
              ExistingRoleArn=${{ secrets.EXISTING_ROLE_ARN }} \
              VpcId=${{ secrets.VPC_ID }} \
              PrivateSubnetA=${{ secrets.PRIVATE_SUBNET_A }} \
              PrivateSubnetB=${{ secrets.PRIVATE_SUBNET_B }} \
              SecurityGroupId=${{ secrets.SECURITY_GROUP_ID }} \
              NlbListenerArn=${{ secrets.NLB_LISTENER_ARN }}
