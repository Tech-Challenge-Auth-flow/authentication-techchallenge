AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  authentication-techchallenge
  Sample SAM Template for authentication-techchallenge

Globals:
  Function:
    Timeout: 3
    # You can add LoggingConfig parameters such as the Logformat, Log Group, and SystemLogLevel or ApplicationLogLevel. Learn more here https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html#sam-function-loggingconfig.
    LoggingConfig:
      LogFormat: JSON

Parameters:
  UserPoolId:
    Type: String
    Description: Cognito User Pool ID
    NoEcho: true
  ClientId:
    Type: String
    Description: Cognito Client ID
    NoEcho: true
  UserPassword:
    Type: String
    Description: Temporary password for new users
    NoEcho: true
  ExistingRoleArn:
    Type: String
    Description: ARN da role existente para usar no Lambda
    Default: arn:aws:iam::587930199896:role/LabRole

Resources:
  HttpApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      DisableExecuteApiEndpoint: false
      CorsConfiguration:
        AllowMethods:
        - OPTIONS
        - GET
        - POST
        - PUT
        - DELETE
        AllowHeaders:
        - Content-Type
        - Authorization
        AllowOrigins:
        - '*'
  AuthFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: auth-lambda
      Handler: app.lambdaHandler
      Runtime: nodejs22.x
      Role: !Ref ExistingRoleArn 
      Architectures:
      - x86_64
      Environment:
        Variables:
          USER_POOL_ID: !Ref UserPoolId
          CLIENT_ID: !Ref ClientId
          USER_PASSWORD: !Ref UserPassword
      Events:
        Auth:
          Type: HttpApi
          Properties:
            ApiId: !Ref HttpApi
            Path: /login
            Method: post
            PayloadFormatVersion: "2.0"
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
        - app.ts

Outputs:
  HttpApi:
    Description: API Gateway endpoint URL for Prod stage for Auth
    Value: !Sub "https://${HttpApi}.execute-api.${AWS::Region}.${AWS::URLSuffix}/"
  AuthFunction:
    Description: Auth Lambda Function ARN
    Value: !GetAtt AuthFunction.Arn
